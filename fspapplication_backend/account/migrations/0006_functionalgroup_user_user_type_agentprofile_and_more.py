# Generated by Django 5.1.7 on 2025-03-27 22:44

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0005_rename_address_line1_userprofile_google_place_id_and_more'),
        ('organisation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunctionalGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('administration', 'Administration'), ('helpdesk', 'Helpdesk'), ('technician', 'Technician'), ('agent', 'Agent'), ('client', 'Client'), ('warehouse', 'Warehouse'), ('admin', 'Administrator'), ('finance', 'Finance'), ('management', 'Management')], help_text='System code for this group, used for permissions', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Display name for this group', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Functional Group',
                'verbose_name_plural': 'Functional Groups',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('agent', 'Agent'), ('client', 'Client'), ('employee', 'Employee')], default='1', max_length=20),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'agent'}, on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Profile',
                'verbose_name_plural': 'Agent Profiles',
            },
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('client_since', models.DateField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Profile',
                'verbose_name_plural': 'Client Profiles',
            },
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='organisation.company')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='account.employeeprofile')),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'employee'}, on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee Profile',
                'verbose_name_plural': 'Employee Profiles',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='functional_groups',
            field=models.ManyToManyField(blank=True, related_name='users', to='account.functionalgroup', verbose_name='Functional Groups'),
        ),
        migrations.CreateModel(
            name='UserGroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_memberships', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_memberships', to='account.functionalgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Group Membership',
                'verbose_name_plural': 'User Group Memberships',
                'unique_together': {('user', 'group')},
            },
        ),
    ]
